@import "init";
// Aggregate all the stylesheets into one file.
@import "normalize";
@import "pages";


$zen-column-count: 2;
$zen-auto-include-item-base: false;

#header,
#content>section,
#comments,
#main-menu,
#footer {
  @include zen-grid-item-base;
  margin-top: rhythm(1);
}
#header {
  margin-bottom: 0;
}
#header,
#main-menu,
#footer {
  text-align: center;
}

h1 {
  @include adjust-font-size-to($h2-font-size, 1);
  @include leader(1, $h2-font-size);
  @include trailer(1, $h2-font-size);
}

#help-toc {
  ul {
    padding-left: 0;
    list-style-type: none;
    li:before {
      content: "★   ";
      font-size: 50%;
      position: relative;
      top: -0.3em;
    }
    ul {
      padding-left: zen-half-gutter();
    }
  }
}

@media all and (min-width: 540px) {
  #header {
    @include zen-grid-item(1, 1);
  }

  #help-toc {
    @include zen-grid-item(1, 2);
    margin-top: 0 !important;
  }

  #import {
    @include zen-clear(both);
  }
}

#content h2,
#comments h2 {
  margin: rhythm(1) (-(zen-half-gutter()));
  padding: 0 zen-half-gutter();
  @include adjust-leading-to(2, $h2-font-size);
  background-color: #eee;
}

#comments {
  #dsq-content #dsq-global-toolbar,
  #disqus_thread {
    @include adjust-leading-to(1);
    margin: rhythm(1) 0;
  }
}

#logo {
  display: block;
  max-width: 293px;
  margin: 0 auto;
  text-align: center;
}

@media all and (min-width: 321px) {
  #page {
    padding-top: 3em;
  }
  #header {
    margin-top: rhythm(1);
  }
  #main-menu {
    position: absolute;
    width: 100%;
    top: 0;
    left: 0;
    line-height: 3em;
    margin: 0;

    h2 {
      @include element-invisible;
    }
    p {
      margin: 0;
    }
  }

  #content {
    h3 em {
      font-weight: normal;
      font-style: normal;
      @include rem-font-size($base-font-size);
    }

    article {
      p,
      pre,
      ul {
        margin-left: $zen-gutter-width;
        margin-right: $zen-gutter-width;
      }
      ul {
        padding-left: 0;
      }
    }
  }
}

#footer {
  @include zen-clear(both);
  @include zen-grid-item(2, 1);
}

//
// Examples
//

.block-a {
  background: $color-example-a;
}

.block-b {
  background: $color-example-b;
}

.block-c {
  background: $color-example-c;
}

.block-d {
  background: $color-example-d;
}

.block-e {
  background: $color-example-e;
}

.example-container {
  @include trailer(1);
  .block {
    text-align: center;
  }
}

#example-1 {
  $zen-column-count: 7; // Set the total number of columns in the grid.
  $zen-gutter-width: 10px;

  .example-container {
    @include zen-grid-container; // Apply this mixin to the container.
  }
  .block-a {
    @include zen-grid-item(4, 1);
  }
  .block-b {
    @include zen-grid-item(3, 1, right);
  }
  .block-c {
    @include zen-clear(right);
    @include zen-grid-item(3, 1, right);
  }
}

#example-2 {
  $zen-column-count: 3; // Set the total number of columns in the grid.
  $zen-gutter-width: 10px;

  .example-container {
    @include zen-grid-container; // Apply this mixin to the container.
  }
  .block-a {
    @include zen-grid-item(2, 1);
  }
  .block-b {
    @include zen-grid-item(1, 1, right);
  }
  .block-c {
    @include zen-clear(right);
    @include zen-grid-item(1, 1, right);
  }
  .block-d {
    @include zen-clear(both);
    @include zen-grid-item(3, 1);
  }
}

#example-3 {
  $zen-column-count: 6; // Set the total number of columns in the grid.
  $zen-gutter-width: 10px;

  .example-container {
    @include zen-grid-container; // Apply this mixin to the container.
  }
  .block-a {
    @include zen-grid-item(3, 3);
  }
  .block-b {
    @include zen-grid-item(2, 1);
  }
  .block-c {
    @include zen-grid-item(1, 1, right);
  }
  .block-d {
    @include zen-clear(right);
    @include zen-grid-item(1, 1, right);
  }
}

#example-4 {
  $zen-column-count: 4; // Set the total number of columns in the grid.
  $zen-gutter-width: 10px;

  .example-container {
    @include zen-grid-container; // Apply this mixin to the container.
  }
  .block-a {
    @include zen-grid-item(2, 1, right);
  }
  .block-b {
    @include zen-grid-item(1, 1);
  }
  .block-c {
    @include zen-grid-item(1, 2);
  }
  .block-d {
    @include zen-clear(left);
    @include zen-grid-item(1, 1);
  }
  .block-e {
    @include zen-grid-item(1, 2);
  }
}

#example-5 {
  $zen-column-count: 7; // Set the total number of columns in the grid.
  $zen-gutter-width: 10px;

  .example-container {
    @include zen-grid-container; // Apply this mixin to the container.
  }
  .block-a {
    @include zen-grid-item(3, 3, right);
  }
  .block-b {
    @include zen-grid-item(2, 1);
  }
  .block-c {
    @include zen-grid-item(2, 6);
  }
  .block-d {
   @include zen-clear(left);
   @include zen-grid-item(2, 1);
  }
  .block-e {
    @include zen-grid-item(2, 6);
  }
}
