/**
 * Plugin that adds rem support to Compass.
 */

// Base font size in pixels, if not already defined.
// Should be the same as the font-size of the html element.
$base-font-size: 16px !default;
$rem-with-px-fallback: true !default;


// Add font-size and line-height with rem units, using px as a fallback value.
@mixin rem-font-size(
  $font-size,
  $line-height: false,
  $root-font-size: $base-font-size
) {
  @include rem(font-size, $font-size, $root-font-size);
  @if ($line-height != false) {
    @include rem(line-height, $line-height, $root-font-size);
  }
}


// Given a $size, returns a value converted to rem.
@function rem(
  $size,
  $root-font-size: $base-font-size
) {
  @if unit($size) == "px" {
    @return ($size / $root-font-size) * 1rem;
  }
  @if unit($size) == "em" {
    @return ($size / 1em) * 1rem;
  }
  @if unit($size) == "rem" {
    @return $size;
  }
}

// For the given property, use rem units with px as a fallback value for older
// browsers.
//
// $property - The css property name.
// $values - The value (or space-separated list of values) for the property.
// $use-px-fallback - Boolean, default: true; whether to use pixel fallback values
//
@mixin rem($property, $values, $use-px-fallback: $rem-with-px-fallback) {
	// Create a couple of empty lists as output buffers.
	$px-values: ();
	$rem-values: ();

	// Ensure $values is a list.
	@if type-of($values) != "list" {
		$values: join((), $values);
	}

	// Loop through the $values list
	@each $value in $values {
		// For each property value, if it's in rem or px, derive both rem and
		// px values for it and add those to the end of the appropriate buffer.
		@if(type-of($value) == number and (unit($value) == px or unit($value) == rem)) {
			@if unit($value) == px {
				$px-values: join($px-values, $value);
			}
			@else {
				$px-values: join($px-values, $value * $base-font-size / 1rem);
			}
			$rem-values: join($rem-values, rem($value));
		}
		@else {
			$px-values: join($px-values, $value);
			$rem-values: join($rem-values, $value);
		}
	}

	// Use pixel fallback for browsers that don't understand rem units.
	@if $use-px-fallback {
		#{$property}: $px-values;
	}

	// Use rem values for everyone else (overrides pixel values).
	#{$property}: $rem-values;
}
